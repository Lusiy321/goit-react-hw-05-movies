{"version":3,"file":"static/js/415.2b8356e0.chunk.js","mappings":"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","sources":["API/MovieAPI.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f753ddb9b7c22c6c336bfdc87099e2ae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopularMovie() {\n  try {\n    const resp = await axios.get(`/trending/movie/week?api_key=${KEY}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieName(name) {\n  try {\n    const resp = await axios.get(`/search/movie?api_key=${KEY}&query=${name}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieId(id) {\n  try {\n    const res = await axios.get(`/movie/${id}?api_key=${KEY}&language=en-US`);\n    return res.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieAct(id) {\n  try {\n    const res = await axios.get(\n      `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return res.data.cast;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieRev(id) {\n  try {\n    const resp = await axios.get(\n      `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return resp.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin: 2% 10%;\n`;\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  margin: 2% 40%;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap; \n  gap: 30px;\n  font-size: 20px;\n  margin: 20px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  width: 300px;\n`;\n\nexport const ItemLink = styled(Link)`\n  display: block;\n  margin-bottom: 5px;\n  color: gray;\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  border-radius: 10px;\n  width: 300px;\n  height: auto;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Title,\n  ItemLink,\n  Image,\n  List,\n  Section,\n  Item,\n} from './MovieList.styled';\n\nexport const MovieList = ({ films, from }) => {\n  const location = useLocation();\n  if (from === 'home') {\n    return (\n      <>\n        <Section>\n          <Title>Trending Films</Title>\n          <List>\n            {films.map(film => (\n              <Item key={film.id}>\n                <ItemLink to={`movies/${film.id}`}>\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                    alt={film.original_title}\n                  ></Image>\n                  {film.original_title} ({film.release_date.slice(0, 4)})\n                </ItemLink>\n              </Item>\n            ))}\n          </List>\n        </Section>\n      </>\n    );\n  }\n  if (from === 'movies') {\n    return (\n      <List>\n        {films.map(film => (\n          <Item key={film.id}>\n            <ItemLink to={film.id.toString()} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                alt={film.original_title}\n              ></Image>\n              {film.original_title} ({film.release_date.slice(0, 4)})\n            </ItemLink>\n          </Item>\n        ))}\n      </List>\n    );\n  }\n};\n\nMovieList.propTypes = {\n  films: PropTypes.array.isRequired,\n  from: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchPopularMovie } from 'API/MovieAPI';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [popularFilms, setPopularFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchFilms() {\n      try {\n        setStatus('pending');\n        const films = await fetchPopularMovie();\n        setPopularFilms(films);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    }\n    fetchFilms();\n  }, []);\n  if (status === 'idle') {\n    return <p>Try later</p>;\n  }\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    return <MovieList films={popularFilms} from=\"home\" />;\n  }\n\n  if (status === 'rejected') {\n    return <h2>{error}</h2>;\n  }\n  console.log(popularFilms);\n};\n\nexport default Home;\n"],"names":["KEY","fetchPopularMovie","axios","resp","data","results","Error","fetchMovieName","name","fetchMovieId","id","res","fetchMovieAct","cast","fetchMovieRev","Section","styled","Title","List","Item","ItemLink","Link","Image","MovieList","films","from","location","useLocation","map","film","to","src","poster_path","alt","original_title","release_date","slice","toString","state","useState","popularFilms","setPopularFilms","status","setStatus","error","setError","useEffect","message","fetchFilms","console","log"],"sourceRoot":""}