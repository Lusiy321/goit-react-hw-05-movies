{"version":3,"file":"static/js/735.ade644b0.chunk.js","mappings":"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","sources":["API/MovieAPI.jsx","components/FilmDetails/FilmDetails.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/FilmDetails/FilmDetails.jsx","pages/FilmPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f753ddb9b7c22c6c336bfdc87099e2ae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopularMovie() {\n  try {\n    const resp = await axios.get(`/trending/movie/week?api_key=${KEY}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieName(name) {\n  try {\n    const resp = await axios.get(`/search/movie?api_key=${KEY}&query=${name}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieId(id) {\n  try {\n    const res = await axios.get(`/movie/${id}?api_key=${KEY}&language=en-US`);\n    return res.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieAct(id) {\n  try {\n    const res = await axios.get(\n      `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return res.data.cast;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieRev(id) {\n  try {\n    const resp = await axios.get(\n      `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return resp.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  justyfy-content: center;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  width: 90%;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n\nexport const DetailsWrap = styled.div`\n  display: flex;\n  margin: 20px auto;\n  justyfy-content: center;\n  width: 90%;\n`;\n\nexport const ImgWrap = styled.div`\n  margin-right: 30px;\n`;\n\nexport const InfoTitle = styled.h3`\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  justyfy-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px auto;\n  width: 90%;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const InfoItem = styled.li`\n  margin-right: 30px;\n  list-style-type: none;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  color: gray;\n  font-size: 30px;\n  margin: 20px;\n  text-decoration: none;\n  &.active {\n    color: red;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ButtonBack = styled.button`\n  max-width: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #ffe0b2;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fefefe;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #2f2f37;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  color: gray;\n  font-size: 30px;\n  margin: 20px;\n  text-decoration: none;\n  &.active {\n    color: red;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ButtonBack, Link } from './Button.styled';\n\nexport const Button = () => {\n  const location = useLocation();\n  return (\n    <ButtonBack>\n      <Link to={location?.state?.from ?? '/goit-react-hw-05-movies'}>\n        GO BACK\n      </Link>\n    </ButtonBack>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Button } from 'components/Button/Button';\nimport {\n  DetailsWrap,\n  ImgWrap,\n  InfoItem,\n  InfoLink,\n  InfoList,\n  InfoTitle,\n  InfoWrap,\n  Section,\n} from './FilmDetails.styled';\n\nexport const FilmDetails = ({\n  poster,\n  title,\n  release_date,\n  votes,\n  overview,\n  genres,\n}) => {\n  const date = new Date(release_date);\n  const yearRelease = date.getFullYear();\n  const userScore = votes * 10;\n  const fullPath = `https://image.tmdb.org/t/p/w500${poster}`;\n  return (\n    <>\n      <Section>\n        <Button from={'home'} />\n        <DetailsWrap>\n          <ImgWrap>\n            <img src={fullPath} alt={title} width=\"274px\" height=\"398px\" />\n          </ImgWrap>\n          <div>\n            <h2>\n              {title} ({yearRelease})\n            </h2>\n            <p>User score: {userScore}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>\n              {genres.map(genr => (\n                <span key={genr.id}>{genr.name} </span>\n              ))}\n            </p>\n          </div>\n        </DetailsWrap>\n        <InfoWrap>\n          <InfoTitle>Additional information</InfoTitle>\n          <InfoList>\n            <InfoItem>\n              <InfoLink to={`cast`}>Cast</InfoLink>\n            </InfoItem>\n            <InfoItem>\n              <InfoLink to={`revievs`}>Revievs</InfoLink>\n            </InfoItem>\n          </InfoList>\n        </InfoWrap>\n      </Section>\n      <Outlet />\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieId } from 'API/MovieAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { FilmDetails } from 'components/FilmDetails/FilmDetails';\n\nconst FilmPage = () => {\n  const [status, setStatus] = useState('idle');\n  const [film, setFilm] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { itemId } = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setStatus('pending');\n        const foundFilm = await fetchMovieId(itemId);\n        if (!foundFilm) {\n          return await Promise.reject(new Error('movie not found'));\n        } else {\n          setFilm(foundFilm);\n        }\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    }\n    fetchData();\n  }, [itemId]);\n\n  if (status === 'idle') {\n    return <p>Try again</p>;\n  }\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    const {\n      poster_path,\n      original_title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = film;\n    return (\n      <FilmDetails\n        poster={poster_path}\n        title={original_title}\n        release_date={release_date}\n        votes={vote_average}\n        overview={overview}\n        genres={genres}\n      />\n    );\n  }\n\n  if (status === 'rejected') {\n    return <h2>{error}</h2>;\n  }\n};\n\nexport default FilmPage;\n"],"names":["KEY","fetchPopularMovie","axios","resp","data","results","Error","fetchMovieName","name","fetchMovieId","id","res","fetchMovieAct","cast","fetchMovieRev","Section","styled","DetailsWrap","ImgWrap","InfoTitle","InfoWrap","InfoList","InfoItem","InfoLink","NavLink","ButtonBack","Link","Button","location","useLocation","to","state","from","FilmDetails","poster","title","release_date","votes","overview","genres","yearRelease","Date","getFullYear","userScore","fullPath","src","alt","width","height","map","genr","useState","status","setStatus","film","setFilm","error","setError","itemId","useParams","useEffect","foundFilm","Promise","reject","message","fetchData","Loader","poster_path","original_title","vote_average"],"sourceRoot":""}