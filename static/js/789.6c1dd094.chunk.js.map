{"version":3,"file":"static/js/789.6c1dd094.chunk.js","mappings":"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","sources":["API/MovieAPI.jsx","components/FilmDetails/FilmDetails.styled.jsx","components/ActorsList/ActorsBlock.styled.jsx","components/ActorsList/ActorsBlock.jsx","pages/Actors.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f753ddb9b7c22c6c336bfdc87099e2ae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopularMovie() {\n  try {\n    const resp = await axios.get(`/trending/movie/week?api_key=${KEY}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieName(name) {\n  try {\n    const resp = await axios.get(`/search/movie?api_key=${KEY}&query=${name}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieId(id) {\n  try {\n    const res = await axios.get(`/movie/${id}?api_key=${KEY}&language=en-US`);\n    return res.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieAct(id) {\n  try {\n    const res = await axios.get(\n      `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return res.data.cast;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieRev(id) {\n  try {\n    const resp = await axios.get(\n      `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return resp.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  justyfy-content: center;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  width: 90%;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n\nexport const DetailsWrap = styled.div`\n  display: flex;\n  margin: 20px auto;\n  justyfy-content: center;\n  width: 90%;\n`;\n\nexport const ImgWrap = styled.div`\n  margin-right: 30px;\n`;\n\nexport const InfoTitle = styled.h3`\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  justyfy-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px auto;\n  width: 90%;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const InfoItem = styled.li`\n  margin-right: 30px;\n  list-style-type: none;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  color: gray;\n  font-size: 30px;\n  margin: 20px;\n  text-decoration: none;\n  &.active {\n    color: red;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const ActorsItem = styled.li`\n  width: 10%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5%;\n  list-style-type: none;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n","import { Section } from 'components/FilmDetails/FilmDetails.styled';\nimport PropTypes from 'prop-types';\nimport { ActorsItem, ActorsList } from './ActorsBlock.styled';\n\nexport const ActorsBlock = ({ data }) => {\n  return (\n    <Section>\n      <ActorsList>\n        {data.map(actor => {\n          const { id, profile_path, name, character } = actor;\n          const fullPath = `https://image.tmdb.org/t/p/w500${profile_path}`;\n          return (\n            <ActorsItem key={id}>\n              <img src={fullPath} alt={name} width=\"100px\" loading=\"lazy\" />\n              <h3>{name}</h3>\n              <p>\n                Character:\n                <span> {character}</span>\n              </p>\n            </ActorsItem>\n          );\n        })}\n      </ActorsList>\n    </Section>\n  );\n};\n\nActorsBlock.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieAct } from 'API/MovieAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { ActorsBlock } from 'components/ActorsList/ActorsBlock';\n\nconst Actors = () => {\n  const [status, setStatus] = useState('idle');\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { itemId } = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setStatus('pending');\n        const data = await fetchMovieAct(itemId);\n        if (!data) {\n          return await Promise.reject(new Error('Try another name'));\n        } else {\n          setData(data);\n        }\n        setStatus('resolve');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    }\n    fetchData();\n  }, [itemId]);\n\n  if (status === 'idle') {\n    return <p>idle</p>;\n  }\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolve') {\n    return <ActorsBlock data={data} />;\n  }\n  if (status === 'rejected') {\n    return <h3>{error}</h3>;\n  }\n};\nexport default Actors;\n"],"names":["KEY","fetchPopularMovie","axios","resp","data","results","Error","fetchMovieName","name","fetchMovieId","id","res","fetchMovieAct","cast","fetchMovieRev","Section","styled","DetailsWrap","ImgWrap","InfoTitle","InfoWrap","InfoList","InfoItem","InfoLink","NavLink","ActorsList","ActorsItem","ActorsBlock","map","actor","profile_path","character","fullPath","src","alt","width","loading","useState","status","setStatus","setData","error","setError","itemId","useParams","useEffect","Promise","reject","message","fetchData","Loader"],"sourceRoot":""}