{"version":3,"file":"static/js/566.7e83aa79.chunk.js","mappings":"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","sources":["API/MovieAPI.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/SearchMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f753ddb9b7c22c6c336bfdc87099e2ae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopularMovie() {\n  try {\n    const resp = await axios.get(`/trending/movie/week?api_key=${KEY}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieName(name) {\n  try {\n    const resp = await axios.get(`/search/movie?api_key=${KEY}&query=${name}`);\n    return resp.data.results;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieId(id) {\n  try {\n    const res = await axios.get(`/movie/${id}?api_key=${KEY}&language=en-US`);\n    return res.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieAct(id) {\n  try {\n    const res = await axios.get(\n      `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return res.data.cast;\n  } catch (e) {\n    throw new Error();\n  }\n}\n\nexport async function fetchMovieRev(id) {\n  try {\n    const resp = await axios.get(\n      `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return resp.data;\n  } catch (e) {\n    throw new Error();\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin: 2% 10%;\n`;\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  margin: 2% 40%;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  font-size: 20px;\n  margin: 20px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  width: 300px;\n`;\n\nexport const ItemLink = styled(Link)`\n  display: block;\n  margin-bottom: 5px;\n  color: gray;\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  border-radius: 10px;\n  width: 300px;\n  height: auto;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Title,\n  ItemLink,\n  Image,\n  List,\n  Section,\n  Item,\n} from './MovieList.styled';\n\nexport const MovieList = ({ films, from }) => {\n  const location = useLocation();\n  if (from === 'home') {\n    return (\n      <>\n        <Section>\n          <Title>Trending Films</Title>\n          <List>\n            {films.map(film => (\n              <Item key={film.id}>\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                  alt={film.original_title}\n                ></Image>\n                <ItemLink to={`movies/${film.id}`}>\n                  {film.original_title}{' '}\n                </ItemLink>\n              </Item>\n            ))}\n          </List>\n        </Section>\n      </>\n    );\n  }\n  if (from === 'movies') {\n    return (\n      <List>\n        {films.map(film => (\n          <Item key={film.id}>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n              alt={film.original_title}\n            ></Image>\n            <ItemLink to={film.id.toString()} state={{ from: location }}>\n              {film.original_title}\n            </ItemLink>\n          </Item>\n        ))}\n      </List>\n    );\n  }\n};\n\nMovieList.propTypes = {\n  films: PropTypes.array.isRequired,\n  from: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #ffe0b2;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #f2f2f2;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  isplay: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 22px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  margin-right: 10px;\n  padding: 15px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Button, Header, Input } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [searchName, setSearchName] = useState('');\n\n  const handleChange = evt => {\n    setSearchName(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchName.trim() === '') {\n      return;\n    }\n    onSubmit(searchName);\n    setSearchName('');\n  };\n\n  return (\n    <Header>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={handleChange}\n          value={searchName}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Header>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieName } from 'API/MovieAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [name, setName] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  let currentQuery = searchParams.get('query');\n\n  const handleFormSubmit = name => {\n    setName(name);\n  };\n\n  useEffect(() => {\n    if (name) {\n      setSearchParams({ query: name });\n    }\n    async function fetchData() {\n      try {\n        setStatus('pending');\n        const films = await fetchMovieName(currentQuery);\n\n        if (films.length === 0) {\n          return await Promise.reject(new Error('Try another name'));\n        } else {\n          setFilms(films);\n        }\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    }\n    if (currentQuery) {\n      fetchData();\n    }\n  }, [name, setSearchParams, currentQuery]);\n\n  if (status === 'idle') {\n    return <SearchBar onSubmit={handleFormSubmit} />;\n  }\n  if (status === 'pending') {\n    return (\n      <>\n        <SearchBar onSubmit={handleFormSubmit} />\n        <Loader />\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <SearchBar onSubmit={handleFormSubmit} />\n        <MovieList films={films} from=\"movies\" />\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <>\n        <SearchBar onSubmit={handleFormSubmit} />\n        <h2>{error}</h2>\n      </>\n    );\n  }\n};\nexport default Movies;\n"],"names":["KEY","fetchPopularMovie","axios","resp","data","results","Error","fetchMovieName","name","fetchMovieId","id","res","fetchMovieAct","cast","fetchMovieRev","Section","styled","Title","List","Item","ItemLink","Link","Image","MovieList","films","from","location","useLocation","map","film","src","poster_path","alt","original_title","to","toString","state","Header","Form","Button","Input","SearchBar","onSubmit","useState","searchName","setSearchName","evt","preventDefault","trim","onChange","target","value","toLowerCase","type","autoComplete","autoFocus","setName","status","setStatus","setFilms","error","setError","useSearchParams","searchParams","setSearchParams","currentQuery","get","handleFormSubmit","useEffect","length","Promise","reject","message","query","fetchData","Loader"],"sourceRoot":""}